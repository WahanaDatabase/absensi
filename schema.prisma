datasource db {
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
    provider  = "postgresql"
}

generator client {
    provider = "prisma-client-js"
    output   = "./generated/client"
}

model User {
    id          Int          @id @default(autoincrement())
    createdAt   DateTime     @default(now())
    email       String       @unique
    name        String
    password    String
    group       String
    no_hp       String
    attendances Attendance[] // One-to-many relation with Attendance
    permissions Permission[] // One-to-many relation with Permission
    role        String
}

model Permission {
    id            Int              @id @default(autoincrement())
    id_karyawan   Int
    nama_karyawan String
    tanggal_izin  DateTime         @default(now())
    bukti_izin    String
    status        PermissionStatus // Custom enum type for permission statuses
    Employee      User             @relation(fields: [id_karyawan], references: [id])
}

model Attendance {
    id          Int              @id @default(autoincrement())
    id_karyawan Int
    id_location Int?
    tanggal     DateTime         @default(now())
    jam_masuk   DateTime?        @default(now())
    jam_keluar  DateTime?        @default(now())
    status      AttendanceStatus // Custom enum type for attendance statuses
    Employee    User             @relation(fields: [id_karyawan], references: [id])
    Location    Location?        @relation(fields: [id_location], references: [id], onDelete: SetNull, onUpdate: Cascade)
}

model Location {
    id            Int          @id @default(autoincrement())
    createdAt     DateTime     @default(now())
    nama_location String
    latitude      Float
    longitude     Float
    qr_code       String
    attendances   Attendance[] // One-to-many relation with Attendance
}

// Enum definitions
enum PermissionStatus {
    IZIN
    ALPHA
}

enum AttendanceStatus {
    TELAT
    IZIN
    ALPHA
    HADIR
    MISSED
}
